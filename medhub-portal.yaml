openapi: 3.0.2
info:
  title: MedHub Mobile App and Portal Website API
  description: |

    First beta of MedHub App and Portal Website API ðŸš€
  version: 0.0.1
  x-logo:
    url: https://id.medhub.uz/logo.svg
paths:
  /profile/who-am-i:
    get:
      tags:
        - profile
      summary: Retrieve Current User's Profile
      description: Retrieve the Profile of a User
      operationId: who_am_i_profile_who_am_i_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: Not Found
  /profile/my-attached-profiles:
    get:
      tags:
        - profile
      summary: Retrieve Current User's Attached Profiles
      description: Retrieve Current User's Attached Profiles
      operationId: my_attached_profiles_profile_my_attached_profiles_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response My Attached Profiles Profile My Attached Profiles Get
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: Not Found
  /profile/create-profile:
    post:
      tags:
        - profile
      summary: Create Profile
      description: >-
        Creates Profile and Med Card with given info. Created Profile will be
        attached to current user.
      operationId: create_profile_profile_create_profile_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileIn'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /appointments/my-appointments:
    get:
      tags:
        - appointments
      summary: Get list of Current User's appointments
      description: >-
        List is ordered by date DESC. Frontend should know by looking at the
        fields if it is booking or live queue appointment
      operationId: my_appointments_appointments_my_appointments_get
      parameters:
        - name: archive
          in: query
          required: true
          schema:
            title: Archive
            type: boolean
        - name: skip
          in: query
          required: false
          schema:
            title: Skip
            default: 0
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            title: Limit
            default: 20
            type: integer
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response My Appointments Appointments My Appointments Get
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/AppointmentWithSpecialistBookingOut'
                    - $ref: '#/components/schemas/AppointmentWithSpecialistLiveOut'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /appointments/book-appointment:
    post:
      tags:
        - appointments
      summary: Book appointment for specialist
      description: Can book only for user itself or his attached profiles
      operationId: book_appointment_appointments_book_appointment_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentWithSpecialistBookingIn'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentWithSpecialistBookingOut'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: Bad Request
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /organization/:
    get:
      tags:
        - organization
      summary: Get list of Organizations
      description: Get list of Organizations
      operationId: organizations_list_organization__get
      parameters:
        - name: skip
          in: query
          required: false
          schema:
            title: Skip
            default: 0
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            title: Limit
            default: 20
            type: integer
        - name: region_id
          in: query
          required: false
          schema:
            title: Region Id
            type: integer
        - name: district_id
          in: query
          required: false
          schema:
            title: District Id
            type: integer
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationListItem'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /organization/{organization_id}:
    get:
      tags:
        - organization
      summary: Retrieve Organization
      operationId: organization_retrieve_organization__organization_id__get
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            title: Organization Id
            type: string
            format: uuid
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /organization/{organization_id}/workplaces:
    get:
      tags:
        - organization
      summary: List of Organization Workplaces
      operationId: organization_workplaces_organization__organization_id__workplaces_get
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            title: Organization Id
            type: string
            format: uuid
        - name: specialization_id
          in: query
          required: true
          schema:
            title: Specialization Id
            type: integer
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: >-
                  Response Organization Workplaces Organization  Organization
                  Id  Workplaces Get
                type: array
                items:
                  $ref: '#/components/schemas/WorkplaceBase'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /organization/{organization_id}/workplaces/{workplace_id}/slots:
    get:
      tags:
        - organization
      summary: Retrieve Workplace Slots
      operationId: >-
        workplace_slots_organization__organization_id__workplaces__workplace_id__slots_get
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            title: Organization Id
            type: string
            format: uuid
        - name: workplace_id
          in: path
          required: true
          schema:
            title: Workplace Id
            type: integer
        - name: slots_for_date
          in: query
          required: true
          schema:
            title: Slots For Date
            type: string
            format: date
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: >-
                  Response Workplace Slots Organization  Organization Id 
                  Workplaces  Workplace Id  Slots Get
                type: array
                items:
                  $ref: '#/components/schemas/AppointmentSlot'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    Address:
      title: Address
      required:
        - id
        - street
        - building
      type: object
      properties:
        id:
          title: Id
          type: integer
        street:
          $ref: '#/components/schemas/Street'
        flat:
          title: Flat
          type: string
        floor:
          title: Floor
          type: integer
        building:
          title: Building
          type: string
    AppointmentSlot:
      title: AppointmentSlot
      required:
        - start_datetime
        - interval
        - is_vacant
        - cabinet
      type: object
      properties:
        start_datetime:
          title: Start Datetime
          type: string
          format: date-time
        interval:
          title: Interval
          type: integer
        is_vacant:
          title: Is Vacant
          type: boolean
        cabinet:
          $ref: '#/components/schemas/CabinetBase'
    AppointmentStatuses:
      title: AppointmentStatuses
      enum:
        - pending
        - in_progress
        - completed
        - absence
        - cancelled
      description: An enumeration.
    AppointmentWithSpecialistBookingIn:
      title: AppointmentWithSpecialistBookingIn
      required:
        - organization_id
        - specialist_id
        - cabinet_id
        - patient_med_card_id
        - scheduled_start
        - scheduled_end
      type: object
      properties:
        organization_id:
          title: Organization Id
          type: string
          format: uuid
        specialist_id:
          title: Specialist Id
          type: integer
        cabinet_id:
          title: Cabinet Id
          type: integer
        patient_med_card_id:
          title: Patient Med Card Id
          type: integer
        scheduled_start:
          title: Scheduled Start
          type: string
          format: date-time
        scheduled_end:
          title: Scheduled End
          type: string
          format: date-time
    AppointmentWithSpecialistBookingOut:
      title: AppointmentWithSpecialistBookingOut
      required:
        - id
        - status
        - organization
        - cabinet
        - scheduled_start
        - scheduled_end
        - specialist
      type: object
      properties:
        id:
          title: Id
          type: integer
        status:
          $ref: '#/components/schemas/AppointmentStatuses'
        organization:
          $ref: '#/components/schemas/OrganizationBase'
        cabinet:
          $ref: '#/components/schemas/CabinetBase'
        scheduled_start:
          title: Scheduled Start
          type: string
          format: date-time
        scheduled_end:
          title: Scheduled End
          type: string
          format: date-time
        specialist:
          $ref: '#/components/schemas/WorkplaceBase'
    AppointmentWithSpecialistLiveOut:
      title: AppointmentWithSpecialistLiveOut
      required:
        - id
        - status
        - organization
        - cabinet
        - queue_number
        - specialist
      type: object
      properties:
        id:
          title: Id
          type: integer
        status:
          $ref: '#/components/schemas/AppointmentStatuses'
        organization:
          $ref: '#/components/schemas/OrganizationBase'
        cabinet:
          $ref: '#/components/schemas/CabinetBase'
        queue_number:
          title: Queue Number
          minimum: 0
          type: integer
        specialist:
          $ref: '#/components/schemas/WorkplaceBase'
    CabinetBase:
      title: CabinetBase
      required:
        - id
        - cabinet_number
      type: object
      properties:
        id:
          title: Id
          type: integer
        cabinet_number:
          title: Cabinet Number
          type: integer
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    Message:
      title: Message
      required:
        - message
      type: object
      properties:
        message:
          title: Message
          type: string
    Organization:
      title: Organization
      required:
        - id
        - name
        - address
        - phone_number
        - existing_specializations
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
        name:
          title: Name
          type: string
        address:
          $ref: '#/components/schemas/Address'
        phone_number:
          title: Phone Number
          type: string
        existing_specializations:
          title: Existing Specializations
          type: array
          items:
            $ref: '#/components/schemas/OrganizationSpecializationInfo'
    OrganizationBase:
      title: OrganizationBase
      required:
        - id
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
        name:
          title: Name
          type: string
    OrganizationListItem:
      title: OrganizationListItem
      required:
        - id
        - name
        - address
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
        name:
          title: Name
          type: string
        address:
          $ref: '#/components/schemas/Address'
    OrganizationSpecializationInfo:
      title: OrganizationSpecializationInfo
      required:
        - id
        - name
        - count
      type: object
      properties:
        id:
          title: Id
          type: integer
        name:
          title: Name
          type: string
        count:
          title: Count
          type: integer
    Profile:
      title: Profile
      required:
        - id
        - med_id
        - med_card_id
        - birth_date
        - first_name
        - last_name
        - phone_number
      type: object
      properties:
        id:
          title: Id
          type: integer
        med_id:
          title: Med Id
          type: string
        med_card_id:
          title: Med Card Id
          type: integer
        birth_date:
          title: Birth Date
          type: string
          format: date
        first_name:
          title: First Name
          type: string
        last_name:
          title: Last Name
          type: string
        patronymic:
          title: Patronymic
          type: string
        phone_number:
          title: Phone Number
          type: string
    ProfileIn:
      title: ProfileIn
      required:
        - birth_date
        - first_name
        - last_name
        - gender_id
      type: object
      properties:
        birth_date:
          title: Birth Date
          type: string
          format: date
        first_name:
          title: First Name
          type: string
        last_name:
          title: Last Name
          type: string
        patronymic:
          title: Patronymic
          type: string
        gender_id:
          title: Gender Id
          type: integer
    Street:
      title: Street
      required:
        - id
        - name
      type: object
      properties:
        id:
          title: Id
          type: integer
        name:
          title: Name
          type: string
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
              - type: string
              - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
    WorkplaceBase:
      title: WorkplaceBase
      required:
        - id
        - name
        - specialization_name
      type: object
      properties:
        id:
          title: Id
          type: integer
        name:
          title: Name
          type: string
        specialization_name:
          title: Specialization Name
          type: string
x-tagGroups:
  - name: My Profile
    tags:
      - profile
      - appointments
  - name: Organization
    tags:
      - organization
